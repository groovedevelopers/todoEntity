// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorServerDbContextExample.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/Users/tobiadeyemi/workspace/BlazorServerDbContextExample/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/tobiadeyemi/workspace/BlazorServerDbContextExample/_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/tobiadeyemi/workspace/BlazorServerDbContextExample/_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/tobiadeyemi/workspace/BlazorServerDbContextExample/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/tobiadeyemi/workspace/BlazorServerDbContextExample/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/tobiadeyemi/workspace/BlazorServerDbContextExample/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/tobiadeyemi/workspace/BlazorServerDbContextExample/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Users/tobiadeyemi/workspace/BlazorServerDbContextExample/_Imports.razor"
using BlazorServerDbContextExample;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "/Users/tobiadeyemi/workspace/BlazorServerDbContextExample/_Imports.razor"
using BlazorServerDbContextExample.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "/Users/tobiadeyemi/workspace/BlazorServerDbContextExample/_Imports.razor"
using BlazorServerDbContextExample.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "/Users/tobiadeyemi/workspace/BlazorServerDbContextExample/_Imports.razor"
using BlazorServerDbContextExample.Grid;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/tobiadeyemi/workspace/BlazorServerDbContextExample/Pages/ViewContact.razor"
using Microsoft.EntityFrameworkCore;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/View/{ContactId:int}")]
    public partial class ViewContact : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 61 "/Users/tobiadeyemi/workspace/BlazorServerDbContextExample/Pages/ViewContact.razor"
       
    /// <summary>
    /// Tracking of asynchronous calls.
    /// </summary>
    private bool Loading;

    /// <summary>
    /// Id from route of contact.
    /// </summary>
    [Parameter]
    public int ContactId { get; set; }

    /// <summary>
    /// Navigation check.
    /// </summary>
    private int _lastContactId;

    /// <summary>
    /// True with redirect from successful edit.
    /// </summary>
    [Parameter]
    public bool EditSuccess { get; set; }

    /// <summary>
    /// Contact entity.
    /// </summary>
    private Contact Contact { get; set; }

    /// <summary>
    /// Set to true when not found.
    /// </summary>
    private bool NotFound = false;

    /// <summary>
    /// Set to true when delete is requested.
    /// </summary>
    private bool ShowConfirmation = false;

    /// <summary>
    /// Set to true when delete is successful
    /// </summary>
    private bool Deleted = false;

    /// <summary>
    /// Navigated
    /// </summary>
    /// <returns>Task</returns>
    protected override async Task OnParametersSetAsync()
    {
        if (_lastContactId != ContactId)
        {
            EditSuccess = EditSuccessState.Success;
            EditSuccessState.Success = false;
            _lastContactId = ContactId;
            await LoadContactAsync();
        }
        await base.OnParametersSetAsync();
    }

    /// <summary>
    /// Confirm deletion
    /// </summary>
    /// <param name="result">True when user confirmed</param>
    /// <returns>Task</returns>
    private async Task ConfirmAsync(bool result)
    {
        if (result)
        {
            await DeleteAsync();
        }
        else
        {
            ShowConfirmation = false;
            EditSuccess = false;
        }
    }

    /// <summary>
    /// Loads the contact
    /// </summary>
    /// <returns>Task</returns>
    private async Task LoadContactAsync()
    {
        if (Loading)
        {
            return; //avoid concurrent requests
        }

        NotFound = false;
        Contact = null;

        Loading = true;

        using var context = DbFactory.CreateDbContext();

        Contact = await context.Contacts.AsNoTracking()
            .SingleOrDefaultAsync(c => c.Id == ContactId);

        if (Contact == null)
        {
            NotFound = true;
        }

        Loading = false;
    }

    /// <summary>
    /// Deletes the contact.
    /// </summary>
    /// <returns>Task</returns>
    private async Task DeleteAsync()
    {
        if (Loading)
        {
            return; // avoid concurrent requests
        }

        Loading = true;
        using var context = DbFactory.CreateDbContext();
        var contact = await context.Contacts
            .SingleOrDefaultAsync(c => c.Id == ContactId);
        if (contact != null)
        {
            context.Contacts.Remove(contact);
            await context.SaveChangesAsync();
            Loading = false;
            Deleted = true;
        }
        else
        {
            Loading = false;
            // show not found
            await LoadContactAsync();
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private EditSuccess EditSuccessState { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IPageHelper PageHelper { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IDbContextFactory<ContactContext> DbFactory { get; set; }
    }
}
#pragma warning restore 1591
